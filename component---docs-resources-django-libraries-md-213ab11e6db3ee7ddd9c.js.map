{"version":3,"sources":["webpack:///../docs/resources/django-libraries.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,oNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kEADR,kEAGA,gHAA+F,kBAAIC,WAAW,KAAf,kBAA/F,MACF,kBAAIA,WAAW,KAAf,mBADE,KAC+C,kBAAIA,WAAW,KAAf,qBAD/C,QACqG,kBAAIA,WAAW,KAAf,gBADrG,qOAIA,qFAAoE,mBAAGA,WAAW,KAAQ,CACtF,KAAQ,wBADwD,sBAApE,uBAGe,mBAAGA,WAAW,KAAQ,CACjC,KAAQ,8DADG,wBAHf,wBAOA,iBAAQ,CACN,GAAM,kBADR,kBAGA,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,wDADD,mBAAX,gEAG0B,mBAAGA,WAAW,KAAQ,CAC5C,KAAQ,oBADc,cAH1B,0MAQA,iBAAQ,CACN,GAAM,mBADR,mBAGA,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,uDADD,kBAAX,mXAOA,qFAAoE,mBAAGA,WAAW,KAAQ,CACtF,KAAQ,uBADwD,6BAApE,oJAImC,mBAAGA,WAAW,KAAQ,CACrD,KAAQ,UADuB,cAJnC,8IAQA,iBAAQ,CACN,GAAM,qBADR,qBAGA,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,4DADD,uBAAX,iSAMA,qZAG0D,mBAAGA,WAAW,KAAQ,CAC5E,KAAQ,qDAD8C,gBAH1D,KAMA,iBAAQ,CACN,GAAM,gBADR,gBAGA,4BAAW,mBAAGA,WAAW,KAAQ,CAC7B,KAAQ,wDADD,mBAAX,8Q,2MAUJJ,EAAWK,gBAAiB","file":"component---docs-resources-django-libraries-md-213ab11e6db3ee7ddd9c.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/bestpractice/bestpractice/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"common-django-libraries-and-components-at-the-city-of-helsinki\"\n    }}>{`Common Django libraries and components at the City of Helsinki`}</h1>\n    <p>{`In general, new projects tend to couple to some City of Helsinki APIs, most importantly `}<em parentName=\"p\">{`authentication`}</em>{`,\n`}<em parentName=\"p\">{`geospatial data`}</em>{`, `}<em parentName=\"p\">{`city organization`}</em>{` and `}<em parentName=\"p\">{`notification`}</em>{`. For these purposes, we have existing Django libraries common\nto several projects. You are encouraged to use these in your own project and contribute to them to suit\nyour own needs and help others using the same libraries.`}</p>\n    <p>{`For more general technology and library choices, please read `}<a parentName=\"p\" {...{\n        \"href\": \"/technology-choices\"\n      }}>{`technology choices`}</a>{`.\nA repository for `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/City-of-Helsinki/helsinki-utils-python\"\n      }}>{`smaller Python utils`}</a>{`\nis also available.`}</p>\n    <h2 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/City-of-Helsinki/django-helusers\"\n      }}>{`django-helusers`}</a>{` app will integrate Django user\nmodel with the Helsinki SSO `}<a parentName=\"p\" {...{\n        \"href\": \"/authentication\"\n      }}>{`Tunnistamo`}</a>{`, creating/identifying Django users automatically when the\nSSO gives the green light, with the necessary contact information and e.g. AD groups if your application\nneeds them for user permissions.`}</p>\n    <h2 {...{\n      \"id\": \"geospatial-data\"\n    }}>{`Geospatial data`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/City-of-Helsinki/django-munigeo\"\n      }}>{`django-munigeo`}</a>{` app will populate your PostGIS\ndatabase with all manner of location data that you may need in geographical queries with Geodjango, such\nas Finnish municipalities, Helsinki neighborhoods, districts and their boundaries, locations of street\naddresses in the Helsinki region, and various other districts and boundaries used by various parts of the\ncity bureaucracy.`}</p>\n    <p>{`Most of the datasets used by django-munigeo are found in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.hri.fi\"\n      }}>{`Helsinki Region Infoshare`}</a>{`\nopen data portal, which has many more datasets available. For more detailed information on our available\ngeospatial and map data, please read `}<a parentName=\"p\" {...{\n        \"href\": \"/maps\"\n      }}>{`map layers`}</a>{`. If the dataset you need does not have an importer\nin django-munigeo yet, please implement the import and create a PR in django-munigeo!`}</p>\n    <h2 {...{\n      \"id\": \"city-organization\"\n    }}>{`City organization`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/City-of-Helsinki/django-orghierarchy\"\n      }}>{`django-orghierarchy`}</a>{` app provides support\nfor hierarchical user management in a multilevel organization hierarchy. That way, you can have regular and\nadmin users on many levels in your app, from the city and division level all the way down to a users in a\nsingle city unit providing a specific service.`}</p>\n    <p>{`Also provided is an importer to import the existing hierarchy into your Django app. So, if your application\nis expected to have lots of users around the city hierarchy on many different levels, this will help your\nproduct owner to allocate each user to the correct location in the city organization. An example of how\nthe hierarchy is used in user permission management is e.g. `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/City-of-Helsinki/linkedevents\"\n      }}>{`Linkedevents`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"notification\"\n    }}>{`Notification`}</h2>\n    <p>{`The `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/City-of-Helsinki/django-ilmoitin\"\n      }}>{`django-ilmoitin`}</a>{` app allows you to couple your\nDjango models save methods and/or signals to Helsinki Mailgun account for sending email notifications,\nmodeled after templates editable in django-admin, to Django users after certain events, either instantly\nor via a message queue.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}