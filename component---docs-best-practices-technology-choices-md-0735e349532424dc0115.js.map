{"version":3,"sources":["webpack:///../docs/best-practices/technology-choices.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sBADR,sBAGA,yGAEA,iBAAQ,CACN,GAAM,oBADR,oBAGA,sBACE,kBAAIC,WAAW,MAAf,yCAA8D,kBAAIA,WAAW,MACzE,kBAAIA,WAAW,MAAf,8EACA,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2CADQ,yBAApB,kBAGA,kBAAIA,WAAW,MAAf,oCAAyD,mBAAGA,WAAW,MAAS,CAC5E,KAAQ,gEAD6C,mBAAzD,KAGA,kBAAIA,WAAW,MAAf,iDAEJ,kBAAIA,WAAW,MAAf,gDAAqE,kBAAIA,WAAW,MAChF,kBAAIA,WAAW,MAAf,yBAEJ,kBAAIA,WAAW,MAAf,0CAA+D,kBAAIA,WAAW,MAC1E,kBAAIA,WAAW,MAAf,sDAEJ,kBAAIA,WAAW,MAAf,+CAEF,iBAAQ,CACN,GAAM,qBADR,qBAGA,sBACE,kBAAIA,WAAW,MAAf,oFACc,kBAAIA,WAAW,MACzB,kBAAIA,WAAW,MAAf,yBACA,kBAAIA,WAAW,MAAf,oBACA,kBAAIA,WAAW,MAAf,mBACA,kBAAIA,WAAW,MAAf,iDAEJ,kBAAIA,WAAW,MAAf,uDACH,mBAAGA,WAAW,MAAS,CAChB,KAAQ,+DADf,8DADG,KAG6E,kBAAIA,WAAW,MACxF,kBAAIA,WAAW,MAAf,gGAGJ,kBAAIA,WAAW,MAAf,mJAES,kBAAIA,WAAW,MACpB,kBAAIA,WAAW,MAAf,gDAAqE,kBAAIA,WAAW,MAChF,kBAAIA,WAAW,MAAf,qGAKV,iBAAQ,CACN,GAAM,sBADR,sBAGA,sBACE,kBAAIA,WAAW,MAAf,qCACA,kBAAIA,WAAW,MAAf,wGAGF,iBAAQ,CACN,GAAM,oBADR,qBAGA,sBACE,kBAAIA,WAAW,MAAf,qEAA0F,kBAAIA,WAAW,MACrG,kBAAIA,WAAW,MAAf,0BAA+C,0BAAYA,WAAW,MAAvB,kBAA/C,8DAEA,kBAAIA,WAAW,MAAf,oGAEA,kBAAIA,WAAW,MAAf,kEAEJ,kBAAIA,WAAW,MAAf,8DAAmF,kBAAIA,WAAW,MAC9F,kBAAIA,WAAW,MAAf,wEAEJ,kBAAIA,WAAW,MAAf,6DAAkF,kBAAIA,WAAW,MAC7F,kBAAIA,WAAW,MAAf,yGAGJ,kBAAIA,WAAW,MAAf,6CACA,kBAAIA,WAAW,MAAf,iEACA,kBAAIA,WAAW,MAAf,iD,kNAMNJ,EAAWK,gBAAiB","file":"component---docs-best-practices-technology-choices-md-0735e349532424dc0115.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/bestpractice/bestpractice/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"technology-choices\"\n    }}>{`Technology choices`}</h1>\n    <p>{`Document about the tech stack used for developing code in the City of\nHelsinki.`}</p>\n    <h2 {...{\n      \"id\": \"backend-services\"\n    }}>{`Backend services`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`For most things: Python 3 with Django.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Suggested versions for the new projects are Python 3.7 and Django 2.2 LTS.`}</li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://www.django-rest-framework.org/\"\n            }}>{`Django REST framework`}</a>{` for REST APIs`}</li>\n          <li parentName=\"ul\">{`Graphene for GraphQL APIs, using `}<a parentName=\"li\" {...{\n              \"href\": \"https://docs.graphene-python.org/projects/django/en/latest/\"\n            }}>{`Graphene-Django`}</a>{`.`}</li>\n          <li parentName=\"ul\">{`Postgres / PostGIS for background databases`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`For stateless GraphQL proxies / API gateways:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Node.js with Apollo`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`For serving static files of React apps:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Node.js with express (and server-side rendering)`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Make all APIs available through api.hel.fi`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"frontend-services\"\n    }}>{`Frontend services`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`For most things: React with \"standard\" extensions (= just use\ncreate-react-app).`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`preferably TypeScript`}</li>\n          <li parentName=\"ul\">{`yarn and webpack`}</li>\n          <li parentName=\"ul\">{`redux for state`}</li>\n          <li parentName=\"ul\">{`Always set up and use server-side rendering`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`always use components from Helsinki Design System\n(`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/City-of-Helsinki/helsinki-design-system\"\n        }}>{`https://github.com/City-of-Helsinki/helsinki-design-system`}</a>{`).`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`Contribute your components into HDS and use them by including the\npackage as a dependency`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Usually, the front pages of citizen directed services should be made\nwith Wordpress.  (So that they can be changed without coder\nintervention)`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`don't customise wordpress if you can avoid it`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`if you can't, adhere to their coding standards to try to make the\ncode work across upgrades`}</li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"creating-libraries\"\n    }}>{`Creating Libraries`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`use npm and PyPI for distribution`}</li>\n      <li parentName=\"ul\">{`always include own libraries via npm/PyPI, never directly via version\ncontrol / local installation`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"helpers--tooling\"\n    }}>{`Helpers & tooling`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`docker (and Dockerfiles) for creating runnable, publishable images`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`make the image so that `}<inlineCode parentName=\"li\">{`docker run XXX`}</inlineCode>{` (with environment variables)\nbrings up a working service`}</li>\n          <li parentName=\"ul\">{`test, stage, and production environments are always installed by the\nDocker images in dockerhub`}</li>\n          <li parentName=\"ul\">{`docker-compose for reproducibly bringing up dev environments`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Use bash (for simple tasks) or Python 3 (for complex ones).`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`if it has more than one loop, or any data processing, it's complex`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Gitlab or Travis for build, test and deployment automation`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`the build instructions should be one command only.  If it's multiple\ncommands, put it in a script.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Ansible for remote configuration of hosts`}</li>\n      <li parentName=\"ul\">{`Terraform for remote configuration of deployment environments`}</li>\n      <li parentName=\"ul\">{`Helm for remote configuration of Kubernetes`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}