(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{Ms83:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return o}));a("5hJT"),a("W1QL"),a("K/PF"),a("t91x"),a("75LO"),a("PJhk");var r=a("SAVP"),n=a("TjRS");a("aD51");function s(){return(s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/apis/statistics.md"}});var b={_frontmatter:c},l=n.a;function o(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,["components"]);return Object(r.b)(l,s({},b,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"statistics"},"Statistics"),Object(r.b)("p",null,"Query the city's statistical databases"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"API location: ",Object(r.b)("a",s({parentName:"li"},{href:"http://dev.hel.fi/stats/resources/"}),"dev.hel.fi/stats/resources/"))),Object(r.b)("h2",{id:"documentation"},"Documentation"),Object(r.b)("p",null,"The ",Object(r.b)("a",s({parentName:"p"},{href:"http://dev.hel.fi/stats/"}),"API documentation")," is primarily in Finnish. English descriptions are found below."),Object(r.b)("p",null,"More detailed information and installation instructions can be found in the Github page of statcubeserver, which is a thin wrapper around the datafile-handler pydatacube."),Object(r.b)("p",null,"Browse datasets with a browser: "),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /browser/\n")),Object(r.b)("p",null,"Preview a dataset and see available methods: "),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /browser/?resource=[resource uri]\n")),Object(r.b)("p",null,"Get available datasets: "),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /resources/\n")),Object(r.b)("p",null,"Get dataset metadata and methods: "),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /resources/[resource id]\n")),Object(r.b)("p",null,"Get a filtered dataset: "),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /resources/[resource_id]/filter[&col1=cat1,cat2&col2=cat3 ...\n")),Object(r.b)("p",null,'Get dataset\'s data (can be filtered) as "entries": '),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /resources/[dataset path]/entrie\n")),Object(r.b)("p",null,'Get data as "table": '),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /resources/[dataset path]/table[?start=firstrow&end=lastrow\n")),Object(r.b)("p",null,'Get data as "columns": '),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /resources/[dataset path]/column\n")),Object(r.b)("p",null,'Get grouped data ("pivot") as columns: '),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /resources/[dataset path]/group_for_columns?as_values=[col1,col2...\n")),Object(r.b)("p",null,"Get data as JSON-stat: "),Object(r.b)("pre",null,Object(r.b)("code",s({parentName:"pre"},{}),"    /resources/[dataset path]/jsonsta\n")))}o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/apis/statistics.md"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-apis-statistics-md-05cf3e47a817ba719702.js.map