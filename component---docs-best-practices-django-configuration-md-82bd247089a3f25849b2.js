(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{VANp:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return r})),t.d(n,"default",(function(){return c}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk");var i=t("SAVP"),a=t("TjRS");t("aD51");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/best-practices/django-configuration.md"}});var s={_frontmatter:r},l=a.a;function c(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(i.b)(l,o({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"configuration-for-city-of-helsinki-django-projects"},"Configuration for City of Helsinki Django projects"),Object(i.b)("p",null,"Configuration for all new projects should be done using environment variables if at all possible."),Object(i.b)("p",null,"Projects should use ",Object(i.b)("a",o({parentName:"p"},{href:"https://pypi.org/project/django-environ/"}),"django-environ")," for reading environment\nvariables. This makes it easy to inspect available settings from settings.py"),Object(i.b)("h2",{id:"usage-example"},"Usage example"),Object(i.b)("p",null,"Specify the available variables using the ",Object(i.b)("inlineCode",{parentName:"p"},"environ.Env")," constructor. Include types and default values here.\nThis makes for a nice single-point-of-truth for available settings."),Object(i.b)("pre",null,Object(i.b)("code",o({parentName:"pre"},{}),"env = environ.Env(\n    DEBUG=(bool, True),\n    SECRET_KEY=(str, ''),\n    ALLOWED_HOSTS=(list, []),\n    ADMINS=(list, []),\n    DATABASE_URL=(str, 'postgis://mvj:mvj@localhost/mvj'),\n    CACHE_URL=(str, 'locmemcache://'),\n    EMAIL_URL=(str, 'consolemail://'),\n    SENTRY_DSN=(str, ''),\n    TOKEN_AUTH_ACCEPTED_AUDIENCE=(str, ''),\n    TOKEN_AUTH_ACCEPTED_SCOPE_PREFIX=(str, ''),\n    TOKEN_AUTH_AUTHSERVER_URL=(str, ''),\n    TOKEN_AUTH_FIELD_FOR_CONSENTS=(str, ''),\n    TOKEN_AUTH_REQUIRE_SCOPE_PREFIX=(bool, True),\n)\n")),Object(i.b)("p",null,"Access parsed values using your defined ",Object(i.b)("inlineCode",{parentName:"p"},"env"),". Authentication config is a typical case:"),Object(i.b)("pre",null,Object(i.b)("code",o({parentName:"pre"},{}),"OIDC_API_TOKEN_AUTH = {\n    'AUDIENCE': env('TOKEN_AUTH_ACCEPTED_AUDIENCE'),\n    'API_SCOPE_PREFIX': env('TOKEN_AUTH_ACCEPTED_SCOPE_PREFIX'),\n    'ISSUER': env('TOKEN_AUTH_AUTHSERVER_URL'),\n    'API_AUTHORIZATION_FIELD': env('TOKEN_AUTH_FIELD_FOR_CONSENTS'),\n    'REQUIRE_API_SCOPE_FOR_AUTHENTICATION': env('TOKEN_AUTH_REQUIRE_SCOPE_PREFIX'),\n}\n")),Object(i.b)("h2",{id:"authentication-config-for-apis"},"Authentication config for APIs"),Object(i.b)("p",null,"Software implementing an APIs need to often need the ability to authenticate\nincoming requests, fe. when personal data is requested. City of Helsinki\nprojects use a token authentication based on OIDC/Oauth stuff."),Object(i.b)("p",null,"The software component handling this is ",Object(i.b)("inlineCode",{parentName:"p"},"django-helusers"),". Which needs\nOIDC_API_TOKEN_AUTH dict filled as seen above. For easier operations the\nconfiguration variables should be mapped to environment variables as seen\nabove."),Object(i.b)("h3",{id:"meaning-of-the-environment-variables"},"Meaning of the environment variables"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"TOKEN_AUTH_ACCEPTED_AUDIENCE"),': specifies the "aud"-field that should be\npresent in the token presented by the client. This is an URL identifying\na single deployment of your API software. However, it is not the url where\nthe API is located, but instead an identifier in the namespace used by\nauthentication server. For example: ',Object(i.b)("inlineCode",{parentName:"p"},"https://api.hel.fi/auth/haravadev")),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"TOKEN_AUTH_AUTHSERVER_URL"),': specifies the URL the the authentication server\nstandard OIDC-endpoint. As opposed to the "accepted audience" setting, this\nis a honest to goodness URL. The libraries handling OIDC will expect to find\n',Object(i.b)("inlineCode",{parentName:"p"},".well-known/openid-configuration")," path under this url. Example:\n",Object(i.b)("inlineCode",{parentName:"p"},"https://api.hel.fi/sso-test/openid/")),Object(i.b)("p",null,"There are also other variables. I've forgotten what they mean."))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/best-practices/django-configuration.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-best-practices-django-configuration-md-82bd247089a3f25849b2.js.map